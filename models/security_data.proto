syntax = "proto3";
package models;
option go_package = "gitlab.com/alphaticks/alpha-connect/models";

import "gitlab.com/alphaticks/xchanger/models/xchanger.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

enum InstrumentStatus {
    PreTrading = 0;
    Trading = 1;
    PostTrading = 2;
    EndOfDay = 3;
    Halt = 4;
    AuctionMatch = 5;
    Break = 6;
    Disabled = 7;
}

enum ExecutionInstruction {
    ParticipateDoNotInitiate = 0;
    ReduceOnly = 1;
    CloseOnTrigger = 2;
}

message Instrument {
    google.protobuf.UInt64Value securityID = 1;
    models.Exchange exchange = 2;
    google.protobuf.StringValue symbol = 3;
}

message Security {
    uint64 securityID = 1;
    string securityType = 2;
    models.Exchange exchange = 3;
    string symbol = 4;
    models.Asset underlying = 7;
    models.Asset quote_currency = 8;
    InstrumentStatus status = 9;
    bool is_inverse = 10;
    google.protobuf.DoubleValue min_price_increment = 11;
    google.protobuf.DoubleValue round_lot = 12;
    google.protobuf.DoubleValue maker_fee = 13;
    google.protobuf.DoubleValue taker_fee = 14;
    google.protobuf.DoubleValue multiplier = 15;
    google.protobuf.Timestamp maturity_date = 16;
    google.protobuf.StringValue securitySubType = 17;
    google.protobuf.DoubleValue max_limit_quantity = 18;
    google.protobuf.DoubleValue max_market_quantity = 19;
    google.protobuf.DoubleValue min_order_quantity = 24;
    google.protobuf.Timestamp creation_date = 20;
    google.protobuf.UInt64Value creation_block = 21;
    models.Protocol protocol = 22;
    models.Chain chain = 23;
}

message Order {
    string orderID = 1;
    string client_orderID = 2;
    Instrument instrument = 3;
    OrderStatus order_status = 4;
    OrderType order_type = 5;
    Side side = 6;
    TimeInForce time_in_force = 7;
    double leaves_quantity = 8;
    double cum_quantity = 9;
    google.protobuf.DoubleValue price = 10;
    repeated ExecutionInstruction execution_instructions = 11;
    string tag = 12;
    google.protobuf.Timestamp creation_time = 13;
}

message Position {
    string account = 1;
    Instrument instrument = 2;
    double quantity = 3;
    bool cross = 4;
    double cost = 5;
}

message Balance {
    string account = 1;
    models.Asset asset = 2;
    double quantity = 3;
}

message TradeCapture {
    Side side = 1;
    TradeType type = 2;
    double price = 3;
    double quantity = 4;
    double commission = 5;
    Asset commission_asset = 6;
    string tradeID = 7;
    models.Instrument instrument = 8;
    google.protobuf.StringValue trade_LinkID = 9;
    google.protobuf.StringValue orderID = 10;
    google.protobuf.StringValue client_orderID = 11;
    google.protobuf.Timestamp transaction_time = 12;
}

enum TradeType {
    Regular = 0;
    Block = 1;
    ExchangeForPhysical = 2;
    Transfer = 3;
}

enum Side {
    Buy = 0;
    Sell = 1;
}

enum OrderStatus {
    New = 0;
    PartiallyFilled = 1;
    Filled = 2;
    Done = 3;
    Canceled = 4;
    Replaced = 5;
    PendingCancel = 6;
    Stopped = 7;
    Rejected = 8;
    Suspended = 9;
    PendingNew = 10;
    Calculated = 11;
    Expired = 12;
    PendingReplace = 13;
    Created = 14;
}

enum OrderType {
    Market = 0;
    Limit = 1;
    Stop = 2;
    StopLimit = 3;
    LimitIfTouched = 4;
    MarketIfTouched = 5;
    TrailingStopLimit = 6;
}

enum TimeInForce {
    Session = 0;
    GoodTillCancel = 1;
    AtTheOpening = 2;
    ImmediateOrCancel = 3;
    FillOrKill = 4;
    PostOnly = 5;
}
