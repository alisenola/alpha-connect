package models

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Side int32

const (
	Buy  Side = 0
	Sell Side = 1
)

var Side_name = map[int32]string{
	0: "Buy",
	1: "Sell",
}

var Side_value = map[string]int32{
	"Buy":  0,
	"Sell": 1,
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

type OrderStatus int32

const (
	New             OrderStatus = 0
	PartiallyFilled OrderStatus = 1
	Filled          OrderStatus = 2
	Done            OrderStatus = 3
	Canceled        OrderStatus = 4
	Replaced        OrderStatus = 5
	PendingCancel   OrderStatus = 6
	Stopped         OrderStatus = 7
	Rejected        OrderStatus = 8
	Suspended       OrderStatus = 9
	PendingNew      OrderStatus = 10
	Calculated      OrderStatus = 11
	Expired         OrderStatus = 12
	PendingReplace  OrderStatus = 13
)

var OrderStatus_name = map[int32]string{
	0:  "New",
	1:  "PartiallyFilled",
	2:  "Filled",
	3:  "Done",
	4:  "Canceled",
	5:  "Replaced",
	6:  "PendingCancel",
	7:  "Stopped",
	8:  "Rejected",
	9:  "Suspended",
	10: "PendingNew",
	11: "Calculated",
	12: "Expired",
	13: "PendingReplace",
}

var OrderStatus_value = map[string]int32{
	"New":             0,
	"PartiallyFilled": 1,
	"Filled":          2,
	"Done":            3,
	"Canceled":        4,
	"Replaced":        5,
	"PendingCancel":   6,
	"Stopped":         7,
	"Rejected":        8,
	"Suspended":       9,
	"PendingNew":      10,
	"Calculated":      11,
	"Expired":         12,
	"PendingReplace":  13,
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

type OrderType int32

const (
	Market    OrderType = 0
	Limit     OrderType = 1
	Stop      OrderType = 2
	StopLimit OrderType = 3
)

var OrderType_name = map[int32]string{
	0: "Market",
	1: "Limit",
	2: "Stop",
	3: "StopLimit",
}

var OrderType_value = map[string]int32{
	"Market":    0,
	"Limit":     1,
	"Stop":      2,
	"StopLimit": 3,
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func init() {
	proto.RegisterEnum("models.Side", Side_name, Side_value)
	proto.RegisterEnum("models.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("models.OrderType", OrderType_name, OrderType_value)
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x90, 0x3d, 0x72, 0xdb, 0x30,
	0x10, 0x85, 0x01, 0xfd, 0x50, 0xe2, 0x52, 0x52, 0x10, 0xa4, 0x52, 0x0a, 0x1c, 0x40, 0x45, 0x54,
	0x24, 0x5d, 0x3a, 0x29, 0x49, 0x15, 0xdb, 0x1a, 0xd3, 0x17, 0x80, 0x88, 0xb5, 0x86, 0x36, 0x44,
	0x60, 0x28, 0x70, 0x6c, 0x76, 0x3e, 0x82, 0x8f, 0xe1, 0xa3, 0xb8, 0x54, 0xa9, 0x19, 0x37, 0x16,
	0xd5, 0xb8, 0xd4, 0x11, 0x3c, 0x20, 0xd9, 0x61, 0x17, 0x1f, 0xde, 0x7b, 0x78, 0x10, 0x99, 0x5c,
	0x61, 0xfe, 0xc3, 0xe6, 0xc6, 0x19, 0x1e, 0x6c, 0x8d, 0x42, 0xbd, 0xfb, 0x3e, 0xdd, 0x18, 0xb3,
	0xd1, 0x38, 0xaf, 0xb7, 0xeb, 0xe2, 0x76, 0x2e, 0xb3, 0xb2, 0x41, 0x66, 0x53, 0xe8, 0xc5, 0xa9,
	0x42, 0x3e, 0x80, 0xee, 0xa2, 0x28, 0x19, 0xe1, 0x43, 0xe8, 0xc5, 0xa8, 0x35, 0xa3, 0xb3, 0x37,
	0x0a, 0xd1, 0x95, 0x57, 0x8b, 0x9d, 0x74, 0xc5, 0xce, 0x23, 0x97, 0xf8, 0xc0, 0x08, 0xff, 0x06,
	0x5f, 0x56, 0x32, 0x77, 0xa9, 0xd4, 0xba, 0xfc, 0x97, 0x6a, 0x8d, 0x8a, 0x51, 0x0e, 0x10, 0xb4,
	0xe7, 0x8e, 0xd7, 0xf8, 0x63, 0x32, 0x64, 0x5d, 0x3e, 0x82, 0xe1, 0x52, 0x66, 0x09, 0xfa, 0x7d,
	0xcf, 0x4f, 0xd7, 0x68, 0xb5, 0x4c, 0x50, 0xb1, 0x3e, 0xff, 0x0a, 0xe3, 0x15, 0x66, 0x2a, 0xcd,
	0x36, 0x0d, 0xc2, 0x02, 0x1e, 0xc1, 0x20, 0x76, 0xc6, 0x5a, 0x54, 0x6c, 0xd0, 0xd0, 0x77, 0x98,
	0x38, 0x54, 0x6c, 0xc8, 0xc7, 0x10, 0xc6, 0xc5, 0xce, 0x62, 0xa6, 0x50, 0xb1, 0x90, 0x4f, 0x00,
	0xda, 0xc7, 0x3e, 0x13, 0xf8, 0x79, 0x29, 0x75, 0x52, 0x68, 0xe9, 0xf1, 0xc8, 0x2b, 0xfd, 0x7d,
	0xb4, 0x69, 0x8e, 0x8a, 0x8d, 0x38, 0x87, 0x49, 0x0b, 0xb7, 0xf6, 0x6c, 0x3c, 0xfb, 0x0d, 0x61,
	0xfd, 0xb9, 0x9b, 0xd2, 0xa2, 0x0f, 0x7f, 0x21, 0xf3, 0x7b, 0x74, 0x8c, 0xf0, 0x10, 0xfa, 0xff,
	0xd3, 0x6d, 0xea, 0x18, 0xad, 0xbb, 0x70, 0xc6, 0xb2, 0x4e, 0xed, 0xee, 0x8c, 0x6d, 0x2e, 0xba,
	0x8b, 0x5f, 0xfb, 0xa3, 0x20, 0x87, 0xa3, 0x20, 0xe7, 0xa3, 0xa0, 0x4f, 0x95, 0xa0, 0x2f, 0x95,
	0xa0, 0xaf, 0x95, 0xa0, 0xfb, 0x4a, 0xd0, 0xf7, 0x4a, 0xd0, 0x8f, 0x4a, 0x90, 0x73, 0x25, 0xe8,
	0xf3, 0x49, 0x90, 0xfd, 0x49, 0x90, 0xc3, 0x49, 0x90, 0x75, 0x50, 0x57, 0xfe, 0xf3, 0x33, 0x00,
	0x00, 0xff, 0xff, 0x69, 0x7d, 0xd9, 0xee, 0xa4, 0x01, 0x00, 0x00,
}

func (x Side) String() string {
	s, ok := Side_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderStatus) String() string {
	s, ok := OrderStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderType) String() string {
	s, ok := OrderType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
