syntax = "proto3";
package messages;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "gitlab.com/alphaticks/xchanger/models/protos.proto";

import "gitlab.com/alphaticks/alphac/models/market_data.proto";
import "gitlab.com/alphaticks/alphac/models/security_data.proto";
import "gitlab.com/alphaticks/alphac/models/account.proto";

import "github.com/AsynkronIT/protoactor-go/actor/protos.proto";

message BusinessRequestReject {
    uint64 requestID = 1;
    string reason = 2;
}

message MarketDataRequest {
    uint64 requestID = 1;
    bool subscribe = 2;
    actor.PID subscriber = 3;
    models.Instrument instrument = 4;
    models.OrderBookAggregation aggregation = 5;
}

message MarketDataRequestReject {
    uint64 requestID = 1;
    string reason = 2;
}

message MarketDataSnapshot {
    uint64 requestID = 1;
    uint64 responseID = 2;
    models.OBL2Snapshot snapshotL2 = 3;
    models.OBL3Snapshot snapshotL3 = 4;
    repeated models.AggregatedTrade trades = 5;
}

message MarketDataIncrementalRefresh {
    uint64 requestID = 1;
    uint64 responseID = 2;
    models.OBL2Update updateL2 = 3;
    models.OBL3Update updateL3 = 4;
    repeated models.AggregatedTrade trades = 5;
}

message SecurityDefinitionRequest {
    uint64 requestID = 1;
    models.Instrument instrument = 2;
}

message SecurityDefinitionResponse {
    uint64 requestID = 1;
    uint64 responseID = 2;
    models.Security security = 3;
    RejectionReason rejection_reason = 4;
}

message SecurityListRequest {
    uint64 requestID = 1;
    bool subscribe = 2;
    actor.PID subscriber = 3;
}

message SecurityList {
    uint64 requestID = 1;
    uint64 responseID = 2;
    string error = 3;
    repeated models.Security securities = 4;
}

enum ExecutionType {
    New = 0;
    Done = 1;
    Canceled = 2;
    Replaced = 3;
    PendingCancel = 4;
    Stopped = 5;
    Rejected = 6;
    Suspended = 7;
    PendingNew = 8;
    Calculated = 9;
    Expired = 10;
    PendingReplace = 11;
    Trade = 12;
    OrderStatus = 13;
    Settlement = 14;
}

enum RejectionReason {
    Other = 0;
    UnknownSymbol = 1;
    UnknownSecurityID = 2;
    UnsupportedOrderCharacteristic = 3;
    IncorrectQuantity = 4;
    ExchangeClosed = 5;
    DuplicateOrder = 6;
    InvalidAccount = 7;
    TooLateToCancel = 8;
    UnknownOrder = 9;
    CancelAlreadyPending = 10;
    DifferentSymbols = 11;
    InvalidRequest = 12;
    ExchangeAPIError = 13;
    InvalidOrder = 14;
}

enum FeeType {
    Regulatory = 0;
    Tax = 1;
    LocalCommission = 2;
    ExchangeFees = 3;
}

enum FeeBasis {
    Absolute = 0;
    PerUnit = 1;
    Percentage = 2;
}

message ExecutionReport {
    uint64 seq_num = 1;
    string orderID = 2;
    google.protobuf.StringValue client_orderID = 3;
    string executionID = 4;
    ExecutionType execution_type = 5;
    models.OrderStatus order_status = 6;
    models.Instrument instrument = 7;
    double leaves_quantity = 9;
    double cum_quantity = 10;
    google.protobuf.Timestamp transaction_time = 11;
    google.protobuf.StringValue tradeID = 12;
    google.protobuf.DoubleValue fill_price = 13;
    google.protobuf.DoubleValue fill_quantity = 14;
    google.protobuf.DoubleValue fee_amount = 15;
    models.Asset fee_currency = 16;
    FeeType fee_type = 17;
    FeeBasis fee_basis = 18;
    RejectionReason rejection_reason = 19;
}

message SideValue {
    models.Side value = 1;
}

message OrderStatusValue {
    models.OrderStatus value = 1;
}

message OrderFilter {
    google.protobuf.StringValue orderID = 1;
    google.protobuf.StringValue client_orderID = 2;
    models.Instrument instrument = 3;
    SideValue side = 4;
    OrderStatusValue order_status = 5;
}

message OrderStatusRequest {
    uint64 requestID = 1;
    bool subscribe = 2;
    actor.PID subscriber = 3;
    models.Account account = 4;
    OrderFilter filter = 5;
}

message OrderList {
    uint64 requestID = 1;
    bool success = 2;
    repeated models.Order orders = 3;
    RejectionReason rejection_reason = 4;
}

message PositionsRequest {
    uint64 requestID = 1;
    bool subscribe = 2;
    actor.PID subscriber = 3;
    models.Instrument instrument = 4;
    models.Account account = 5;
}

message PositionList {
    uint64 requestID = 1;
    uint64 responseID = 2;
    repeated models.Position positions = 3;
    bool success = 4;
    RejectionReason rejection_reason = 5;
}

message BalancesRequest {
    uint64 requestID = 1;
    bool subscribe = 2;
    actor.PID subscriber = 3;
    models.Asset asset = 4;
    models.Account account = 5;
}

message BalanceList {
    uint64 requestID = 1;
    uint64 responseID = 2;
    repeated models.Balance balances = 3;
    bool success = 4;
    RejectionReason rejection_reason = 5;
}

message NewOrder {
    string client_orderID = 1;
    models.Instrument instrument = 2;
    models.OrderType order_type = 5;
    models.Side order_side = 6;
    models.TimeInForce time_in_force = 7;
    double quantity = 8;
    google.protobuf.DoubleValue price = 9;
}

message NewOrderSingleRequest {
    uint64 requestID = 1;
    models.Account account = 2;
    NewOrder order = 3;
}

message NewOrderSingleResponse {
    uint64 requestID = 1;
    bool success = 2;
    string orderID = 3;
    RejectionReason rejection_reason = 4;
}

message NewOrderBulkRequest {
    uint64 requestID = 1;
    models.Account account = 2;
    repeated NewOrder orders = 3;
}

message NewOrderBulkResponse {
    uint64 requestID = 1;
    bool success = 2;
    repeated string orderIDs = 3;
    RejectionReason rejection_reason = 4;
}

message OrderCancelRequest {
    uint64 requestID = 1;
    google.protobuf.StringValue orderID = 2;
    google.protobuf.StringValue client_orderID = 3;
    models.Instrument instrument = 4;
    models.Account account = 5;
}

message OrderCancelResponse {
    uint64 requestID = 1;
    bool success = 2;
    RejectionReason rejection_reason = 3;
}

message OrderMassCancelRequest {
    uint64 requestID = 1;
    models.Account account = 2;
    OrderFilter filter = 3;
}

message OrderMassCancelResponse {
    uint64 requestID = 1;
    bool success = 2;
    RejectionReason rejection_reason = 3;
}
